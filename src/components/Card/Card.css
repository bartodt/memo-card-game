/**
 * Memory Card Component Styles
 * Organized by card state and functionality
 */

/* ===== BASIC CARD STYLES ===== */
.memory-card {
 width: var(--card-size);
 height: var(--card-size);
 perspective: 1000px;
 cursor: pointer;
 position: relative;
 transition: transform 0.2s;
 margin: auto;
}

.card-inner {
 width: 100%;
 height: 100%;
 position: relative;
 border-radius: 12px;
 box-shadow: 0 10px 25px var(--shadow-dark);
 transition: transform 0.6s ease;
 transform-style: preserve-3d;
}

.card-front,
.card-back {
 width: 100%;
 height: 100%;
 position: absolute;
 display: flex;
 align-items: center;
 justify-content: center;
 font-size: 28px;
 font-weight: bold;
 border-radius: 12px;
 user-select: none;
 overflow: hidden;
 backface-visibility: hidden;
 -webkit-backface-visibility: hidden;
}

.card-front {
 background: linear-gradient(135deg, var(--primary), var(--secondary));
 color: white;
 transform: rotateY(0deg);
}

.card-front::after {
 content: "?";
 font-size: 36px;
 opacity: 0.9;
 text-shadow: 2px 2px 5px var(--shadow-darker);
}

.card-back {
 background: linear-gradient(135deg, var(--light), var(--card-back));
 color: var(--dark);
 transform: rotateY(180deg);
 border: 3px solid var(--light);
}

.card-value {
 font-size: 28px;
 text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
}

/* ===== CARD STATES ===== */
/* Flipped State */
.memory-card.flipped .card-inner {
 transform: rotateY(180deg);
}

/* Hover effect for cards in normal state */
.memory-card:not(.flipped):hover {
 transform: translateY(-5px) scale(1.05);
 box-shadow: 0 15px 30px var(--shadow-dark);
 transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275),
  box-shadow 0.3s ease;
}

/* Hover effect for flipped cards */
.memory-card.flipped:hover {
 transform: translateY(-5px);
 transition: transform 0.3s ease;
}

/* Glowing border effect on hover */
.memory-card:not(.matched):hover .card-inner::after {
 content: "";
 position: absolute;
 top: -2px;
 left: -2px;
 right: -2px;
 bottom: -2px;
 border: 2px solid rgba(255, 255, 255, 0.6);
 border-radius: 14px;
 animation: pulseBorder 1.5s infinite;
 pointer-events: none;
}

/* Active state (click effect) */
.memory-card:active:not(.flipped):not(.matched) {
 transform: scale(0.95);
 transition: transform 0.1s;
}

/* Disabled state */
.memory-card.disabled {
 cursor: default;
 pointer-events: none;
}

.memory-card.disabled:hover {
 transform: none;
}

/* ===== MATCHED CARDS ===== */
.memory-card.matched .card-inner {
 transform: none;
 box-shadow: 0 0 15px var(--success);
 border: 2px solid var(--success);
 animation: matchedPulse 2s ease-in-out forwards;
 overflow: hidden;
}

/* Styles for matched cards */
.memory-card.matched .card-front {
 display: none;
}

.memory-card.matched .card-back {
 display: flex;
 backface-visibility: visible;
 -webkit-backface-visibility: visible;
 background: linear-gradient(
  135deg,
  var(--success),
  var(--success-light)
 ) !important;
 color: white !important;
 border-radius: 10px;
 border: none;
 transform: rotateY(0deg);
}

@keyframes matchedPulse {
 0% {
  transform: scale(1);
  box-shadow: 0 0 15px var(--success);
 }
 25% {
  transform: scale(1.1);
  box-shadow: 0 0 25px var(--success);
 }
 50% {
  transform: scale(1.05);
  box-shadow: 0 0 20px var(--success);
 }
 100% {
  transform: scale(1);
  box-shadow: 0 0 15px var(--success);
 }
}

.dark-theme .card-back {
 background: linear-gradient(135deg, #2c2c2c, #2c3e50);
 color: white;
 border: 2px solid white;
}

.dark-theme .memory-card.matched .card-back {
 background: linear-gradient(
  135deg,
  var(--success-dark-theme),
  var(--success-light-dark-theme)
 ) !important;
 color: white !important;
 border-radius: 10px;
 border: none;
}

@media (max-width: 600px) {
 :root {
  --card-size: 80px;
 }

 .card-front::after {
  font-size: 28px;
 }

 .card-value {
  font-size: 22px;
 }
}

/* Glowing border effect */
.memory-card:not(.matched):hover .card-inner::after {
 content: "";
 position: absolute;
 top: -2px;
 left: -2px;
 right: -2px;
 bottom: -2px;
 border: 2px solid rgba(255, 255, 255, 0.6);
 border-radius: 14px;
 animation: pulseBorder 1.5s infinite;
 pointer-events: none;
}

@keyframes pulseBorder {
 0% {
  opacity: 0.6;
  box-shadow: 0 0 5px rgba(255, 255, 255, 0.6);
 }
 50% {
  opacity: 0.9;
  box-shadow: 0 0 15px rgba(255, 255, 255, 0.8);
 }
 100% {
  opacity: 0.6;
  box-shadow: 0 0 5px rgba(255, 255, 255, 0.6);
 }
}

/* Animation for incorrect matches */
.memory-card.shake:not(.matched) {
 animation: shakeCard 0.5s;
}

@keyframes shakeCard {
 0%,
 100% {
  transform: translateX(0);
 }
 20%,
 60% {
  transform: translateX(-5px);
 }
 40%,
 80% {
  transform: translateX(5px);
 }
}
